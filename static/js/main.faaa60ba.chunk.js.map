{"version":3,"sources":["components/Form.js","components/Todo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","ToDoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faaa60ba.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form=({setInputText,todos,setTodos,inputText,setStatus}) => {\n\n    const inputTextHandler= (e) => {\n        console.log(e.target.value);\n        setInputText(e.target.value);\n    };\n\n    const submitTodoHandler = (e) =>{\n      e.preventDefault();\n      setTodos([\n        ...todos, {text: inputText, completed: false,id: Math.random()*1000}\n      ]);\n      setInputText(\"\");\n    };\n    const statusHandler= (e) =>{\nsetStatus(e.target.value)    }\n    return (\n        <div>\n            <form>\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler}name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n        </div>\n    );\n}\n\nexport default Form;\n","import React from 'react'\n\nconst Todo = ({text, todos,todo, setTodos}) => {\n\n    const deleteHandler=()=>{\n       setTodos(todos.filter((el)=>el.id !==todo.id));\n       \n    };\n    const completeHandler= () =>{\n        setTodos(todos.map(item => {\n            if (item.id===todo.id){\n                return {\n                    ...item,completed: !item.completed\n                }\n            }\n            return item;\n        }\n        )\n        )\n    }\n    \n    return (\n       <div className=\"todo\">\n           <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n           <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\n           <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\n\n       </div>\n    )\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nconst ToDoList= ({todos, setTodos,filteredTodos})=> {\n    return (\n        <div className=\"todo-container\">\n        <ul  className=\"todo-list\">\n          {filteredTodos.map((todo) => (\n            <Todo \n            setTodos={setTodos}\n            todos={todos}\n            todo={todo}\n            key={todo.id}\n            text={todo.text} \n                />\n          ))}\n        </ul>\n      </div>\n    );\n}\n\nexport default ToDoList\n","import './App.css';\nimport React , {useState, useEffect} from \"react\";\nimport Form from './components/Form';\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n//state stuff\n  const[inputText,setInputText] = useState(\"\");\n  const[todos, setTodos] = useState([]);\n  const[status, setStatus]=useState(\"all\");\n  const[filteredTodos, setFilteredTodos]=useState([]);\n\n// efect \n  useEffect(()=>{\n  filterHandler();\n  saveLocalTodos();\n  },[todos, status]);\n\n//functions\n  const filterHandler=()=>{\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo=>todo.completed===true));\n        break;\n      case 'uncompleted' :\n        setFilteredTodos(todos.filter(todo=>todo.completed===false));\n        break;\n      default: \n        setFilteredTodos(todos);\n        break;\n    }\n  };\n//save to local\nconst saveLocalTodos=()=>{\n \n    localStorage.setItem('todos',JSON.stringify(todos));\n  \n}\nconst getLocalTodos=()=>{\n  if(localStorage.getItem('todos')===null){\n    localStorage.setItem('todos',JSON.stringify([]));\n\n  }else{\n   let todoLocal = JSON.parse(localStorage.getItem('todos'))\n   setTodos(todoLocal);\n  }\n}\n\n  return (\n    <div className=\"App\">\n<header>\n      <h1>Remember.Me!</h1> <div id=\"mlLogo\"><img src=\"/ml.png\"></img></div>\n      <br></br><h2>By:Gabriel</h2>   \n     \n    </header> \n\n    <Form \n    inputText={inputText} \n    todos={todos} \n    setTodos={setTodos}  \n    setInputText={setInputText}\n    setStatus={setStatus}\n\n    \n    />   \n   \n    <ToDoList \n    filteredTodos={filteredTodos}\n    setTodos={setTodos}  \n    todos={todos} \n\n    />\n    \n    </div>  \n    \n  );\n\n}\n  \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}